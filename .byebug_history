continue
next
processor
next
processor
next
processors
next
processors
next
Pshr.processors
continue
Pshr.processors
continue
Pshr.processors
continue
Pshr.processors
continue
Pshr.processors
continue
Pshr.processors
quit
continue
context[:record].class.pshr_processors
continue
context[:record].class.pshr_processors
continue
processors
continue
processors
continue
processors
continue
processors
quit
continue
processors
continue
processors
continue
processors
continue
processors
continue
next
processors
next
quit
processors[:wtf]
Pshr.processors[type.to_sym]
Pshr.processors
io
type
continue
quit
@upload.mime_type
@upload.type
@upload.file.mime_type
@upload.file
quit
@upload.class.pshr_processor
@upload.class
@upload.save
quit
@upload.file
@upload.reload
@upload.save
quit
@upload.file
@upload.reload
@upload.save
@upload.valid?
quit
@upload.errors.full_messages
@upload.valid?
@upload.file = File.open(file_fixture('image.jpg'))
@upload.file
@upload.errors.full_messages
@upload.valid?
@upload.save
quit
processor
next
context[:record].class.pshr_processor
quit
continue
record.class.pshr_whitelist
continue
record.class.pshr_whitelist
continue
record.class.pshr_whitelist
continue
record.class.pshr_whitelist
quit
record.class.pshr_whitelist
record.class.pshr_processor
record.pshr_processor
record
quit
@upload.file
continue
quit
Pshr::Processor.process_video
Pshr::Processor.process_image
continue
last.file
last
continue
quit
file
continue
file
quit
file
continue
file
continue
next
processor
next
type
next
continue
quit
continue
quit
next
self.file
self
quit
self
continue
quit
file_fixture('image.jpg')
continue
output
next
Pshr.send("#{type}_processing")
next
processor.constantize
processor = 'Pshr::Processor'
processor.constantize
processor
quit
context[:record].class.pshr_processor
context[:record].class
context[:record]
quit
io
type
Pshr.processor
continue
Pshr::Upload.pshr_processor
self.pshr_processor = options[:processor] if options[:processor]
options[:something]
options[:processor]
options[:processor
self.pshr_processor ||= options[:processor]
Pshr::Upload.pshr_processor
self.pshr_processor ||= options[:something]
self.pshr_processor =|| options[:something]
Pshr::Upload.pshr_processor
self.pshr_processor = "whatever"
Pshr::Upload.pshr_processor
options
continue
Pshr::Upload.ordered.last == first
Pshr::Upload.ordered.last == last
first.update_attributes(order_position: :down)
Pshr::Upload.ordered.last == last
Pshr::Upload.ordered.first == first
Pshr::Upload.ordered
first
first.update_attributes(order_position: :down)
first
Pshr::Upload.ordered
continue
Pshr::Upload.rank(:order).last.update_attributes(order_position: :first)
Pshr::Upload.rank(:order).last.update_attributes(order_position: :up)
Pshr::Upload.rank(:order).last.update_attributes(order_position: :down)
Pshr::Upload.rank(:order)
Pshr::Upload.rank(:order).last.update_attributes(order_position: 0)
Pshr::Upload.rank(:order)
Pshr::Upload.rank
Pshr::Upload.all
quit
Pshr::Upload.rank(:order)
Pshr::Upload.rank(:order).second.order_rank
Pshr::Upload.rank(:order).second
Pshr::Upload.rank(:order)
continue
Pshr::Upload.rank(:order).last
Pshr::Upload.rank(:order)
quit
Pshr::Upload.create(file: File.open(file_fixture('image.jpg')))
uploads = Pshr::Upload.all
Pshr::Upload.rank(:order)
uploads.first.order
uploads.first.order_rank
uploads.first.order
uploads = Pshr::Upload.all
Pshr::Upload.second
Pshr::Upload.last
Pshr::Upload.first
Pshr::Upload.all
continue
Pshr::Upload.all
continue
Pshr::Upload.all
quit
Pshr::Upload.all
Pshr::Upload.last
Pshr::Upload.last.order_rank
Pshr::Upload.first.order_rank
Pshr::Upload.first
quit
Pshr::Upload.first.order_rank
Pshr::Upload.first
Pshr::Upload.all
continue
@upload
quit
self.file.mime_type
self.file.metadata
self.file.is_a?(Hash)
self.file
self
quit
io.mime_type
io
quit
io.mime_type
io
quit
io
io.mime_type
context[:record]
context
io
quit
@upload
@upload.metadata[:foo] = "bar"
@upload.metadata
quit
@upload
@upload.metadata['foo'] = "bar"
@upload.metadata = {}
@upload
@upload.metadata['foo'] = "bar"
@upload.metadata[:foo] = "bar"
continue
Pshr.image_processing
Pshr.image_processing = true
Pshr.image_processing
continue
@upload.file = File.open(file_fixture('image.jpg'))
