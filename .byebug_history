quit
y
@resource.where("uploadable_id = ? and uploadable_type = ?", params[:uploadable_id], params[:uploadable_type])quit
@resource.all
@resource.where("uploadable_id = ? and uploadable_type = ?", nil, nil)
params[:uploadable_type]
Upload.all
params
@resource.where("uploadable_id = ? and uploadable_type = ?", params[:uploadable_id], params[:uploadable_type])
continue
@resource.where("uploadable_id = ? and uploadable_type = ?", params[:uploadable_id], params[:uploadable_type])
@resource
params
continue
options
quit
options
quit
options
quit
args[:controller].classify
resources.to_s.classify
resources.classify
resources.to_s
options = {}
resources
args[:controller]
continue
resources resources, args
args
continue
args
resources
continue
resources
quit
@upload_two
@upload.reload
@upload
quit
first.order_rank
first.order_Rank
first.update order_position: :down
continue
first.update order_position: :down
first.update order_position :down
first.order_rank
last
first
quit
next
quit
@upload.update uploadable_id: 1, uploadable_type: "Post"
@upload.order_rank
@upload
@upload_two
@upload_two.order_position
@upload_two.order_position = 1
@upload_two.order_rank
@upload_two.order
@upload_two
continue
controller
continue
u.file
u = @one.uploads.first
@one.file
@one
quit
@upload.file = File.open(file_fixture('image.jpg'))
continue
@upload.file = File.open(file_fixture('image.jpg'))
quit
@upload.file = File.open(file_fixture('image.jpg'))
@upload
quit
json["html"].include? @post.id
json["html"].include? @post.id.to_s
json[:html].include? @post.id.to_s
json.include? @post.id.to_s
json.include? @post.id
@post.id.to_s
@post.id
json = JSON.parse response.body
quit
JSON.parse response.body
@upload
continue
@upload
continue
@upload
continue
@upload
quit
JSON.parse response.body
response.body
quit
json["wtf"]
json["html"].blank?
json["html"]
json = JSON.parse response.body
JSON.parse response.body
quit
JSON.parse response.body
response.body
quit
Upload.whitelist
@upload
Pshr.whitelist
continue
CustomUpload.last.caption
CustomUpload.last
quit
quir
@resource
resource_params
params
@resource
quit
resource_name.capitalize
resource_name
continue
resource_name
continue
resource_name
continue
resource_name
continue
resource_name
continue
resource_name
quit
@upload
@upload.caption
quit
@upload.reload
@upload.reload.metadata
@upload.reload.metadata['caption']
assert_response :success
response.status
response.body
quit
y
qiut
@upload.reload
@upload
continue
resource_params
params
quit
JSON.parse(response.body)['flashes']['success']
JSON.parse(response.body)['flashes']
JSON.parse response.body
response.body
continue
flash.each { |k,v| json.set!(k, v) }
flash.flashes
flash
continue
json.flashes(flash)
continue
main_app.url_for(upload)
continue
main_app.url_for(upload)
quit
main_app.url_for(@upload)
@upload = Upload.new
main_app.url_for(@upload)
url_for(@upload)
upload
@upload
main_app.url_for
uploads_path
@partial
resource_response
quit
main_app.uploads_path
main_app
continue
main_app.uploads_path
main_app.routes
main_app
quit
uploads_path
continue
uploads_path
quit
upload_path(@upload)
uploads_path
@upload
upload
continue
uploads_path
upload_path(@upload)
@upload
quit
uploads_path
quit
uploads_path
quit
uploads_path
quit
uploads_path
quit
@upload
upload
upload_partial
uploads_path
quit
uploads_path
upload
quit
uploads_path
continue
self
@upload
quit
url_for(upload)
continue
uploads_path
quit
uploads_path
upload
quit
continue
include Rails.application.routes.url_helpers
upload_path
continue
uploads_path
continue
@partial
quit
@partial
continue
quit
@_routes
routes
Rails.application.routes.routes
Rails.application.routes
Rails.application
Rails.routes
pshr_path
continue
root_path
pshr_upload_path
upload_url
upload_path
upload.file
upload
continue
quit
render partial: @partial, locals: { upload: @upload }, formats: [:html]
@partial
continue
next
build_resource
